//**SEARCH IN ROTATED SORTED ARRAY**

// Time Complexity :O(logN);
// Space Complexity :o(1);
// Did this code successfully run on Leetcode :Y
// Any problem you faced while coding this :
// Your code here along with comments explaining your approach

class Solution {
    public int search(int[] nums, int target) {
        
        if(nums.length==0 || nums==null) return -1;
        
        int low=0;
        int high=nums.length-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            if(nums[mid]==target) return mid;
            
            else if(nums[low]<=nums[mid])
            {
                if(nums[low]<=target && nums[mid]>target)
                {
                    high=mid-1;
                }
                else
                {
                    low=mid+1;
                }
            }
            //nums[mid]<nums[high];
            else
            {
                if(nums[mid]<target && nums[high]>=target)
                {
                    low=mid+1;
                }
                else
                {
                    high=mid-1;
                }
                
            }
        }
        return -1;
        
    }
}
